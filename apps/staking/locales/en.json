{
  "general": {
    "comingSoon": "Coming Soon",
    "loading": "Loading...",
    "or": "or",
    "and": "and",
    "unknownError": "An unknown error occurred.",
    "viewOnExplorer": "View on Explorer",
    "viewOnExplorerShort": "View",
    "you": "You",
    "emptySlot": "EmptyContributorSlot"
  },
  "maths": {
    "outOf": "{count}/{max}"
  },
  "clipboard": {
    "copyToClipboard": "Copy to Clipboard",
    "copyToClipboardSuccessToast": "Copied to clipboard!"
  },
  "navigation": {
    "home": "Home",
    "stake": "Stake Now",
    "myStakes": "My Stakes",
    "docs": "Docs",
    "tokenSite": "Session Token",
    "support": "Support",
    "register": "Register",
    "faucet": "Faucet",
    "hamburgerDropdown": {
      "ariaLabel": "Open navigation menu",
      "language": "Change language",
      "ariaLanguage": "Open language selection",
      "support": "Support",
      "ariaSupport": "Go to support page",
      "faucet": "Faucet",
      "ariaFaucet": "Go to faucet page"
    },
    "managedBy": "/ Managed by the Session Network"
  },
  "wallet": {
    "modalButton": {
      "connect": "Connect Wallet",
      "connected": "Open Wallet",
      "connecting": "Connecting...",
      "reconnecting": "Reconnecting...",
      "ariaConnected": "Open wallet account modal",
      "ariaDisconnected": "Open connect wallet modal",
      "balance": "Balance",
      "address": "Address",
      "fallbackName": "No name"
    },
    "watchTokenButton": {
      "importText": "Import Token",
      "ariaImport": "Import {tokenSymbol} information to your wallet watch list",
      "changeNetwork": "Change Network",
      "ariaChangeNetwork": "Switch to a supported network",
      "pending": "Pending",
      "ariaPending": "Adding {tokenSymbol} to your wallet watch list",
      "failError": "Your wallet does not support importing tokens"
    },
    "networkDropdown": {
      "invalid": "Invalid network",
      "ariaMainnet": "Switch to {mainnetName}",
      "ariaTestnet": "Switch to {testnetName}",
      "ariaDropdown": "Open network dropdown",
      "errorNotSupported": "It looks like your wallet doesn't support the Arbitrum Sepolia test network. Try connecting with a different wallet."
    }
  },
  "notFound": {
    "description": "Sorry! We couldn't find the page you were looking for.",
    "homeButton": "Return Home"
  },
  "home": {
    "title": "Stake <text-semibold>{tokenSymbol}</text-semibold>",
    "titleDescription": "Secure the Network",
    "buttons": {
      "primary": "Participate in Incentivised Testnet",
      "secondary": "Join Bug Bounty"
    },
    "heroImageAlt": "Glass cube with green highlights"
  },
  "faucet": {
    "information": {
      "title": "Getting test {tokenSymbol}",
      "communityTitle": "Session Token Community Members",
      "communityDescription": "If you were part of the Token Community <session-token-community-snapshot-link></session-token-community-snapshot-link>  taken on {snapshotDate}, you are eligible to receive test {tokenSymbol}. Connect to {connectionOptions}, and then connect your wallet or enter your wallet address manually. If your eligibility is confirmed, test {tokenSymbol} will be sent to this address.",
      "oxenTitle": "Oxen Service Nodes",
      "oxenDescription": "If you registered for the <oxen-program-link></oxen-program-link> by {oxenRegistrationDate}, you are also eligible. Connect the wallet that you registered for the program with, or enter the wallet address manually. If your eligibility is confirmed, test {tokenSymbol} will be sent to this address.",
      "walletRequirementTitle": "Wallet Requirements:",
      "walletRequirementDescription": "You will need test {gasTokenSymbol} on the {testNetworkChain} network to use as <gas-info-link>gas</gas-info-link> for all test {tokenSymbol} transactions. If you don't have any, this faucet will top up your {testNetworkChain} test {gasTokenSymbol} balance to up to {minimumFaucetGasAmount} test {gasTokenSymbol}. You can also get test {gasTokenSymbol} from an <gas-faucet-link>{testNetworkChain} faucet</gas-faucet-link>. Each eligible wallet can use this faucet to make a one-time claim for {faucetDrip} {tokenSymbol}. Please note that faucet usage limits may be subject to change.",
      "notEligible": "Not eligible? {testnetName} and its Incentive Program are currently closed to the public, however we will be inviting new users to join our testnet in the future."
    },
    "addTokenInfo": "Make {tokenSymbol} visible in your wallet by manually importing the token.",
    "transactions": {
      "tableCaption": "A list of your faucet transactions.",
      "when": "When",
      "hash": "Hash",
      "amount": "Amount"
    },
    "form": {
      "back": "Back",
      "inputPlaceholder": "Wallet address",
      "inputAria": "Enter your wallet address to receive test {tokenSymbol} from the faucet.",
      "connectWalletButtonText": "Connect Wallet",
      "connectWalletButtonAria": "Connect your wallet to receive test {tokenSymbol} from the faucet.",
      "disconnectWalletButtonText": "Disconnect",
      "disconnectWalletButtonAria": "Disconnect your wallet.",
      "connectedWalletButtonText": "Connected",
      "connectedWalletButtonAria": "Connected to wallet, click to disconnect.",
      "telegramConnectButtonAria": "Connect your Telegram account",
      "discordConnectButtonAria": "Connect your Discord account",
      "swapToTestnet": "Swap to {testnetName}",
      "confirm": {
        "connectedWalletInfo": "Your connected wallet's account <address></address> is being used to fill out this form. You will not be asked to make any transactions.",
        "discordDisclaimer": "Your connected <tooltip>Discord User ID</tooltip> will be sent with this form.",
        "discordDisclaimerUserIdTooltip": "Your Discord User ID is the unique identifier for your Discord account.",
        "telegramDisclaimer": "Your connected <tooltip>Telegram User ID</tooltip> will be sent with this form.",
        "telegramDisclaimerUserIdTooltip": "Your Telegram User ID is the unique identifier for your Telegram account."
      },
      "submit": {
        "continueText": "Continue",
        "continueAria": "Continue to receive test {tokenSymbol} from the faucet.",
        "getTestTokensText": "Get Test {tokenSymbol}",
        "getTestTokensAria": "Get test {tokenSymbol} from the faucet.",
        "checkingEligibilityText": "Checking Eligibility...",
        "checkingEligibilityAria": "Checking if you are eligible to receive test {tokenSymbol} from the faucet.",
        "sendingTokensText": "Sending Test {tokenSymbol}...",
        "sendingTokensAria": "Sending test {tokenSymbol} to your wallet address.",
        "transactionSuccess": "Transaction Successful",
        "transactionSuccessDescription": "Test {tokenSymbol} has been sent to your wallet address.",
        "transactionError": "Transaction Failed"
      },
      "error": {
        "invalidAddress": "Wallet address is not valid. It must be a valid {ethTokenSymbol} address: {example}",
        "insufficientEth": "It looks like you don't have enough test {gasTokenSymbol} on {testNetworkChain}, go to <recommended-gas-faucet-link></recommended-gas-faucet-link> to get some. You have {gasAmount} test {gasTokenSymbol}",
        "insufficientEthTextOnly": "It looks like you don't have enough test {gasTokenSymbol} on {testNetworkChain}. You have {gasAmount} test {gasTokenSymbol}",
        "incorrectChain": "Faucet only works on {testnetName}, switch to {testNetworkChain} network to use the faucet.",
        "faucetOutOfTokens": "Faucet is out of {tokenSymbol}, Please <contact-support-link></contact-support-link> for assistance.",
        "faucetOutOfTokensTextOnly": "Faucet is out of {tokenSymbol}, Please contact support for assistance.",
        "invalidService": "The {service} account you connected was not part of the community snapshot on {snapshotDate} and is not eligible for testnet access.",
        "invalidOxenAddress": "This wallet address was not registered for the {oxenProgram} on {oxenRegistrationDate} and is not eligible for testnet access. Try connecting with Discord or Telegram instead.",
        "alreadyUsedService": "The connected {service} account has already been used to claim testnet {tokenSymbol} for another wallet address.",
        "alreadyUsed": "The connected wallet address has already been used to claim testnet {tokenSymbol}.",
        "authFailed": "{service} authentication failed. Please refresh the page and try again.",
        "invalidReferralCode": "Referral code is invalid.",
        "referralCodeCantBeUsedByCreator": "Referral code can't be used by this wallet, consider sharing it with someone.",
        "referralCodeOutOfUses": "Referral code is out of uses.",
        "referralCodeAlreadyUsed": "You have already used this referral code."
      },
      "transactionHash": "Transaction Hash: {hash}",
      "transactionHashDescription": "Transaction hash of the faucet transaction.",
      "haveSomeMore": "Alright then, you can have some more",
      "watchSENTInfo": "You may need to manually add {tokenSymbol} to your walletâ€™s token list to make it show up, click the button below to add it.",
      "copyTransactionHash": "Copy Transaction Hash",
      "copyTransactionHashSuccessToast": "Copied Transaction Hash to clipboard!",
      "referralCodeAdded": "Faucet referral code detected and added."
    }
  },
  "chainBanner": {
    "unsupportedChain": "You are currently on an unsupported chain. <link>Click here to switch chain</link>",
    "mainnetNotLive": "{mainnetName} is not live yet. <link>Click here to switch to {testnetName}</link>",
    "testnet": "You are currently on {testnetName}."
  },
  "modules": {
    "title": {
      "format": "{title}:"
    },
    "openNodes": {
      "title": "Open Session Nodes",
      "description": "Nodes that are open for staking. <link>Learn more</link>",
      "noNodesP1": "There are currently no Open Session Nodes available to stake to.",
      "noNodesP2": "Check out the <link>docs</link> to learn about setting up and registering your own Session Node.",
      "landingP1": "Once Multi-Contributor Nodes are enabled on the Session Testnet, you'll be able to choose an Open Session Node to stake test {tokenSymbol} to. ",
      "landingP2": "Testnet participants can currently run and stake to their own Single Contributor Nodes.",
      "landingP1Mainnet": "Click on an Open Session Node to stake {tokenSymbol} and earn rewards for securing the network.",
      "landingP2Mainnet": "Want to run your own Session Node?",
      "learnMoreButtonText": "Learn More",
      "learnMoreButtonAria": "Navigate to the Session Node documentation page."
    },
    "nodeRegistrations": {
      "title": "Your Prepared Registrations",
      "showHiddenText": "Show Hidden",
      "landingP1": "Click on a node you have prepared to stake and confirm registration.",
      "noWalletP1": "Connect your wallet to view Session Nodes that you have prepared registrations for.",
      "noNodesP1": "You have not prepared registrations for any Session Nodes.",
      "noNodesP2": "Learn how to prepare registration for your Session Node <link>here</link>.",
      "learnMoreButtonText": "Learn More",
      "learnMoreButtonAria": "Navigate to the Session Node documentation page."
    },
    "stakedNodes": {
      "title": "My Stakes",
      "showHiddenText": "Show Hidden",
      "noWalletP1": "You currently have no wallet connected.",
      "noWalletP2": "Click the Connect button to view your staked Session node.",
      "noNodesP1": "You have no staked Session Nodes.",
      "noNodesP2": "Click the <link>Stake Now</link> button to stake to an open node or register a new Session node.",
      "stakeNowButtonText": "Stake Now",
      "stakeNowButtonAria": "Navigate to the staking page to stake to an open node."
    },
    "toast": {
      "error": "Failed to fetch {module}.",
      "refetching": "Trying again...",
      "retryButton": "Retry",
      "refetchSuccess": "Successfully refetched {module}"
    },
    "balance": {
      "title": "Total Staked",
      "description": "Total {tokenSymbol} you have staked to nodes."
    },
    "dailyRewards": {
      "title": "Daily Node Rewards",
      "description": "The current daily rewards for running one node. <link>Learn more</link>"
    },
    "totalRewards": {
      "title": "Total Rewards Earned",
      "description": "The total amount of lifetime rewards earned from staking. <link>Learn more</link>"
    },
    "unclaimedTokens": {
      "title": "Unclaimed Tokens",
      "description": "The total amount of rewards that have not been claimed yet. <link>Learn more</link>"
    },
    "claim": {
      "title": "Claim",
      "dialog": {
        "title": "Claim Rewards",
        "claimFee": "Claim Fee",
        "claimFeeTooltip": "The amount of {gasTokenSymbol} this transaction will use. <link>Learn more</link>",
        "amountClaimable": "Amount Claimable",
        "amountClaimableTooltip": "Amount of {tokenSymbol} rewards able to be claimed.",
        "buttons": {
          "submit": "Claim",
          "submitAria": "Claim {tokenAmount} {tokenSymbol} with a claim gas fee of {gasAmount} {gasSymbol}"
        }
      }
    },
    "price": {
      "title": "Price",
      "description": "Current price of {tokenSymbol}."
    }
  },
  "sessionNodes": {
    "general": {
      "publicKeyShort": "SN Key",
      "publicKeyLong": "Session Node Public Key",
      "publicKeyDescription": "The identifier for the Session Node.",
      "operatorAddress": "Operator Address",
      "operatorAddressTooltip": "The wallet address of the node operator.",
      "operatorFee": "Operator Fee",
      "operatorFeeShort": "Fee",
      "operatorFeeDescription": "The percentage of rewards the operator takes before splitting the rest with contributors."
    },
    "staking": {
      "stakedBalance": "Staked Balance",
      "stakedBalanceDescription": "Your total staked {tokenSymbol} in the node.",
      "minimumContribution": "Minimum Contribution",
      "minimumContributionDescription": "Minimum amount of {tokenSymbol} that can be staked to this node.",
      "maximumContribution": "Maximum Contribution",
      "maximumContributionDescription": "Maximum amount of {tokenSymbol} that can be staked to this node.",
      "stakedAmount": "Staked Amount",
      "stakedAmountDescription": "Amount of {tokenSymbol} staked to this node.",
      "stakeAmount": "Stake Amount",
      "stakeAmountDescription": "Amount of {tokenSymbol} to stake."
    }
  },
  "actionModules": {
    "shared": {
      "stakeAmount": "Stake Amount",
      "stakeAmountDescription": "Amount of {tokenSymbol} to stake to the Session node."
    },
    "register": {
      "title": "Register a New Node",
      "preparedAtTimestamp": "Registration Prepared",
      "preparedAtTimestampDescription": "When the node was prepared for registration",
      "button": {
        "submit": "Register and Stake {amount} {tokenSymbol}"
      },
      "description": "Please start the registration process from your client or select from the list of open Session Node.",
      "notFound": {
        "description": "The registration you are looking for could not be found.",
        "foundOpenNode": "It looks like this node is already registered and open for staking:",
        "foundRunningNode": "It looks like this node is already registered and running:"
      },
      "goToMyStakes": "The Session Node has been successfully registered and joined the network. It will appear on <link></link> soon",
      "stage": {
        "approve": {
          "pending": "Requesting wallet permission to stake {tokenSymbol}",
          "success": "Requesting wallet permission to stake {tokenSymbol}",
          "error": "Requesting wallet permission to stake {tokenSymbol}",
          "errorTooltip": "Wallet permission was not granted"
        },
        "simulate": {
          "pending": "Validating Session node registration parameters",
          "success": "Validating Session node registration parameters",
          "error": "Validating Session node registration parameters",
          "errorTooltip": "Registration was malformed, please regenerate the registration"
        },
        "write": {
          "pending": "Requesting Session node registration stake from wallet",
          "success": "Requesting Session node registration stake from wallet",
          "error": "Requesting Session node registration stake from wallet",
          "errorTooltip": "Session node registration stake was not approved"
        },
        "transaction": {
          "pending": "Submitting Session node registration to Arbitrum",
          "success": "Submitting Session node registration to Arbitrum",
          "error": "Submitting Session node registration to Arbitrum",
          "errorTooltip": "Session node registration was not sent to Arbitrum"
        },
        "join": {
          "pending": "Waiting for Session node to join the network",
          "success": "Waiting for Session node to join the network",
          "error": "Waiting for Session node to join the network",
          "error_tooltip": "Session node was not able to join the network"
        }
      }
    },
    "node": {
      "title": "Stake to a Node",
      "contributors": "Shared Contributors",
      "contributorsTooltip": "The contributors currently staking to this node.",
      "button": {
        "submit": "Stake {amount} {tokenSymbol}",
        "submitting": "Staking {amount} {tokenSymbol}...",
        "waitingForWallet": "Waiting for wallet authorization...",
        "submittingToArbitrum": "Submitting request to Arbitrum...",
        "success": "Successfully staked {amount} {tokenSymbol}."
      }
    }
  },
  "nodeCard": {
    "open": {
      "min": "Min",
      "max": "Max",
      "minContribution": "Min Contribution",
      "viewButton": {
        "text": "View",
        "ariaLabel": "View the node details in the side panel"
      }
    },
    "pending": {
      "type": "Type",
      "typeDescription": "The node type",
      "solo": "Single Contributor Node",
      "multi": "Multi Contributor Node",
      "registerButton": {
        "text": "Register",
        "ariaLabel": "View the node registration details in the side panel"
      }
    },
    "staked": {
      "operator": "Operator",
      "labelExpand": "Expand",
      "ariaExpand": "Expand node details",
      "labelCollapse": "Collapse",
      "ariaCollapse": "Collapse node details",
      "lastUptime": "Last Uptime: {time}",
      "lastUptimeDescription": "The last time the node provided a proof of availability.",
      "lastRewardHeight": "Last Reward Height: {height}",
      "lastRewardHeightDescription": "Last block height the node received rewards.",
      "unlockingTimerNotification": "Unlocking {time}",
      "unlockingTimerDescription": "Time left until the node is unlocked. After unlocking, you can withdraw your stake.",
      "deregistrationTimerNotification": "Deregistration {time}",
      "deregistrationTimerDescription": "Time left until the node is deregistered and funds are locked for {time}.",
      "liquidationNotification": "Awaiting liquidation",
      "liquidationDescription": "The node is inactive and waiting to be removed by the network."
    }
  }
}
